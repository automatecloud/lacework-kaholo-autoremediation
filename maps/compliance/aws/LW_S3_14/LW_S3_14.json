{
    "configurations": [
        {
            "_id": "605b1502257f0800340ca8c3",
            "name": "LaceworkConfig",
            "value": "{\n    \"name\": \"LaceworkConfiguration\",\n    \"policyID\": \"LW_S3_14\",\n    \"violationdescription\": \"Ensure all data stored in the S3 bucket is securely encrypted at rest\",\n    \"eventuuid\": \"ca0b0207-f5a3-4789-a4b9-1797f2dbd5a1\",\n    \"enablebucketencryptionviacli\": \"false\",\n    \"enablebucketencryptionviaobject\": \"false\",\n    \"sendslackmessagesforignored\": \"true\",\n    \"bucketIgnoreList\": [\n        \"arn:aws:s3:::mybucket01\",\n        \"arn:aws:s3:::mybucket02\",\n        \"arn:aws:s3:::mybucket03\"\n    ],\n    \"inputfolder\": \"/usr/src/app/scripts/input/\",\n    \"encryptionconfiguration\": {\n        \"Rules\": [\n            {\n                \"ApplyServerSideEncryptionByDefault\": {\n                    \"SSEAlgorithm\": \"AES256\"\n                }\n            }\n        ]\n    }\n}",
            "mapRevision": "605b1502257f0800340ca898",
            "__v": 0
        }
    ],
    "processes": [
        {
            "flowControl": "each",
            "actionsExecution": "series",
            "correlateAgents": null,
            "mandatory": null,
            "actions": [
                {
                    "retries": 0,
                    "mandatory": null,
                    "isEnabled": true,
                    "params": [
                        {
                            "_id": "605b1502257f0800340ca89b",
                            "code": true,
                            "value": "geteventid()",
                            "param": "6036a2d507d26400341da627",
                            "name": "EVENT_ID"
                        }
                    ],
                    "name": "geteventid",
                    "timeout": null,
                    "method": "GetEventDetails",
                    "numParallel": null
                }
            ],
            "used_plugin": {
                "name": "lacework",
                "version": "1.0.0"
            },
            "uuid": "ca0b0207-f5a3-4789-a4b9-1797f2dbd5a1",
            "numProcessParallel": null,
            "name": "Get event details",
            "description": null,
            "condition": "checkconfiguration()",
            "coordination": null,
            "filterAgents": null,
            "postRun": "createBucketList() ",
            "preRun": null
        },
        {
            "flowControl": "each",
            "actionsExecution": "series",
            "correlateAgents": null,
            "mandatory": null,
            "actions": [
                {
                    "retries": 0,
                    "mandatory": null,
                    "isEnabled": true,
                    "params": [
                        {
                            "_id": "605b1502257f0800340ca89e",
                            "code": true,
                            "value": "printBucketName()",
                            "param": null,
                            "name": "COMMANDS"
                        }
                    ],
                    "name": "printBucketName",
                    "timeout": null,
                    "method": "execute",
                    "numParallel": null
                }
            ],
            "used_plugin": {
                "name": "CommandLine",
                "version": "1.2.0"
            },
            "uuid": "f1677723-1555-4587-9651-c6b80e21f8f6",
            "coordination": "each",
            "numProcessParallel": null,
            "name": "Print S3 Buckets to enable Encryption via CLI",
            "description": "S3 buckets to remediate\n",
            "condition": "checkremediationviacli()",
            "filterAgents": null,
            "postRun": "indexRemediate++;",
            "preRun": null
        },
        {
            "flowControl": "each",
            "actionsExecution": "series",
            "correlateAgents": null,
            "mandatory": null,
            "actions": [
                {
                    "retries": 0,
                    "mandatory": null,
                    "isEnabled": true,
                    "params": [
                        {
                            "_id": "605b1502257f0800340ca8a1",
                            "code": null,
                            "value": "Slack Webhook",
                            "param": null,
                            "name": "webhookUrl"
                        },
                        {
                            "_id": "605b1502257f0800340ca8a2",
                            "code": true,
                            "value": "sendslackmessage()",
                            "param": null,
                            "name": "message"
                        }
                    ],
                    "name": "informsecurity",
                    "timeout": null,
                    "method": "sendIncomingWebhook",
                    "numParallel": null
                }
            ],
            "used_plugin": {
                "name": "Slack",
                "version": "1.1.0"
            },
            "uuid": "3b73f38c-22c6-42dc-ac4e-58a648aafe35",
            "coordination": "each",
            "numProcessParallel": null,
            "name": "Remediated",
            "description": null,
            "condition": "indexSlack < bucketArr.length",
            "filterAgents": null,
            "postRun": "indexSlack++;",
            "preRun": null
        },
        {
            "flowControl": "each",
            "actionsExecution": "series",
            "correlateAgents": null,
            "mandatory": null,
            "actions": [
                {
                    "retries": 0,
                    "mandatory": null,
                    "isEnabled": true,
                    "params": [
                        {
                            "_id": "605b1502257f0800340ca8a5",
                            "code": true,
                            "value": "getfilepath()",
                            "param": null,
                            "name": "PATH"
                        },
                        {
                            "_id": "605b1502257f0800340ca8a6",
                            "code": true,
                            "value": "getfilecontent()",
                            "param": null,
                            "name": "CONTENT"
                        }
                    ],
                    "name": "createfile",
                    "timeout": null,
                    "method": "createFile",
                    "numParallel": null
                }
            ],
            "used_plugin": {
                "name": "TextEditor",
                "version": "1.0.0"
            },
            "uuid": "e455a40b-df0b-4d7f-9f2d-dcaa56508467",
            "coordination": "each",
            "numProcessParallel": null,
            "name": "Create Encryption JSON",
            "description": null,
            "condition": "checkconditionfilecreation()",
            "filterAgents": null,
            "postRun": "indexFileCreation++;",
            "preRun": null
        },
        {
            "flowControl": "each",
            "actionsExecution": "series",
            "correlateAgents": null,
            "mandatory": null,
            "actions": [
                {
                    "retries": 0,
                    "mandatory": null,
                    "isEnabled": true,
                    "params": [
                        {
                            "_id": "605b1502257f0800340ca8a9",
                            "code": true,
                            "value": "enablebucketencryption()",
                            "param": null,
                            "name": "COMMANDS"
                        }
                    ],
                    "name": "enablebucketencryption",
                    "timeout": null,
                    "method": "execute",
                    "numParallel": null
                }
            ],
            "used_plugin": {
                "name": "CommandLine",
                "version": "1.2.0"
            },
            "uuid": "b60de1ed-57c4-432f-ae16-ae5ec9a6e747",
            "coordination": "each",
            "numProcessParallel": null,
            "name": "Apply Encryption Configuration via CLI",
            "description": null,
            "condition": "checkconditionforapplyingencryption()",
            "filterAgents": null,
            "postRun": "indexRemediate2++;",
            "preRun": null
        },
        {
            "flowControl": "each",
            "actionsExecution": "series",
            "correlateAgents": null,
            "mandatory": null,
            "actions": [
                {
                    "name": "enablebucketencryption",
                    "timeout": null,
                    "retries": 0,
                    "method": "putBucketEncryption",
                    "mandatory": null,
                    "params": [
                        {
                            "code": null,
                            "value": "AWS Access Key",
                            "param": null,
                            "viewName": "Access key",
                            "name": "AWS_ACCESS_KEY_ID",
                            "type": "vault",
                            "description": null
                        },
                        {
                            "code": null,
                            "value": "AWS Secret Key",
                            "param": null,
                            "viewName": "Secret key",
                            "name": "AWS_SECRET_ACCESS_KEY",
                            "type": "vault",
                            "description": null
                        },
                        {
                            "code": true,
                            "value": "getbucketname()",
                            "param": null,
                            "viewName": "Bucket name",
                            "name": "bucketName",
                            "type": "string",
                            "description": null
                        },
                        {
                            "code": null,
                            "value": "AES256",
                            "param": null,
                            "viewName": "Encryption Algorithm",
                            "name": "sseAlgo",
                            "type": "options",
                            "description": null
                        },
                        {
                            "code": null,
                            "value": null,
                            "param": null,
                            "viewName": "KMS Master Key ID",
                            "name": "kmsMasterKey",
                            "type": "string",
                            "description": null
                        },
                        {
                            "code": null,
                            "value": null,
                            "param": null,
                            "viewName": "Bucket Key Enabled",
                            "name": "bucketKeyEnabled",
                            "type": "boolean",
                            "description": null
                        }
                    ],
                    "isEnabled": true,
                    "numParallel": null
                }
            ],
            "used_plugin": {
                "name": "Amazon-aws-s3",
                "version": "1.5.4"
            },
            "uuid": "7e641774-dbe0-4bb2-93be-0a7495485fe8",
            "coordination": "each",
            "numProcessParallel": null,
            "name": "Apply Encryption Configuration via Object",
            "description": null,
            "condition": "checkremediationviaobject()",
            "filterAgents": null,
            "postRun": "indexRemediate++;",
            "preRun": null
        },
        {
            "flowControl": "each",
            "actionsExecution": "series",
            "correlateAgents": null,
            "mandatory": null,
            "actions": [
                {
                    "retries": 0,
                    "mandatory": null,
                    "isEnabled": true,
                    "params": [
                        {
                            "_id": "605b1502257f0800340ca8b4",
                            "code": null,
                            "value": "Slack Webhook",
                            "param": null,
                            "name": "webhookUrl"
                        },
                        {
                            "_id": "605b1502257f0800340ca8b5",
                            "code": true,
                            "value": "sendslackmessageforignored()",
                            "param": null,
                            "name": "message"
                        }
                    ],
                    "name": "sendslackmessageforignored",
                    "timeout": null,
                    "method": "sendIncomingWebhook",
                    "numParallel": null
                }
            ],
            "used_plugin": {
                "name": "Slack",
                "version": "1.1.0"
            },
            "uuid": "a9f1f886-fed3-4d59-8705-080780fda824",
            "coordination": "each",
            "numProcessParallel": null,
            "name": "Ignored",
            "description": null,
            "condition": "checkforignoredslack()",
            "filterAgents": null,
            "postRun": "indexIgnored++;",
            "preRun": null
        }
    ],
    "links": [
        {
            "uuid": "324752dd-f24d-42a5-b0d5-7a863b9540e2",
            "sourceId": "71a21434-9118-4080-92cb-908998ce8fd2",
            "targetId": "ca0b0207-f5a3-4789-a4b9-1797f2dbd5a1"
        },
        {
            "uuid": "b6837995-8a73-497d-b94a-8a1973b79d57",
            "sourceId": "ca0b0207-f5a3-4789-a4b9-1797f2dbd5a1",
            "targetId": "f1677723-1555-4587-9651-c6b80e21f8f6"
        },
        {
            "uuid": "acb0b35d-79f6-4d04-a410-fe137ab0c73e",
            "sourceId": "f1677723-1555-4587-9651-c6b80e21f8f6",
            "targetId": "f1677723-1555-4587-9651-c6b80e21f8f6"
        },
        {
            "uuid": "9e891628-e30d-48c6-92ad-c7f5dcd1deab",
            "sourceId": "ca0b0207-f5a3-4789-a4b9-1797f2dbd5a1",
            "targetId": "3b73f38c-22c6-42dc-ac4e-58a648aafe35"
        },
        {
            "uuid": "e5da36a2-9dd5-4bfa-a886-b2c22065f0d6",
            "sourceId": "3b73f38c-22c6-42dc-ac4e-58a648aafe35",
            "targetId": "3b73f38c-22c6-42dc-ac4e-58a648aafe35"
        },
        {
            "uuid": "71486afb-b4c7-47e0-8bb6-bf2265f16ca7",
            "sourceId": "f1677723-1555-4587-9651-c6b80e21f8f6",
            "targetId": "e455a40b-df0b-4d7f-9f2d-dcaa56508467"
        },
        {
            "uuid": "baf37cbb-237f-4994-a1ad-340eff7cfd74",
            "sourceId": "e455a40b-df0b-4d7f-9f2d-dcaa56508467",
            "targetId": "e455a40b-df0b-4d7f-9f2d-dcaa56508467"
        },
        {
            "uuid": "3970a880-f01f-4c36-a6a4-479546a079a5",
            "sourceId": "b60de1ed-57c4-432f-ae16-ae5ec9a6e747",
            "targetId": "b60de1ed-57c4-432f-ae16-ae5ec9a6e747"
        },
        {
            "uuid": "c59bc1ee-88b9-4c59-9ed7-91fee9672f6d",
            "sourceId": "e455a40b-df0b-4d7f-9f2d-dcaa56508467",
            "targetId": "b60de1ed-57c4-432f-ae16-ae5ec9a6e747"
        },
        {
            "uuid": "efa1d1b2-781c-402b-be6e-091819c84e70",
            "sourceId": "ca0b0207-f5a3-4789-a4b9-1797f2dbd5a1",
            "targetId": "7e641774-dbe0-4bb2-93be-0a7495485fe8"
        },
        {
            "uuid": "e75732ea-b074-45c5-9cfd-71087220bffa",
            "sourceId": "7e641774-dbe0-4bb2-93be-0a7495485fe8",
            "targetId": "7e641774-dbe0-4bb2-93be-0a7495485fe8"
        },
        {
            "uuid": "2baf11a2-e453-4d69-8cb0-bd2637b94a4b",
            "sourceId": "3b73f38c-22c6-42dc-ac4e-58a648aafe35",
            "targetId": "a9f1f886-fed3-4d59-8705-080780fda824"
        },
        {
            "uuid": "9fb6f7f2-15ab-4a59-bcda-256cc9b3ddd9",
            "sourceId": "a9f1f886-fed3-4d59-8705-080780fda824",
            "targetId": "a9f1f886-fed3-4d59-8705-080780fda824"
        }
    ],
    "content": "{\"cells\":[{\"type\":\"devs.PMStartPoint\",\"size\":{\"width\":40,\"height\":39},\"outPorts\":[\" \"],\"inPorts\":[],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\" \"}}}]},\"position\":{\"x\":50,\"y\":20},\"angle\":0,\"id\":\"71a21434-9118-4080-92cb-908998ce8fd2\",\"z\":1,\"attrs\":{\"rect\":{\"fill\":\"#2d3236\"}}},{\"type\":\"devs.MyImageModel\",\"size\":{\"width\":100,\"height\":73},\"inPorts\":[\" \"],\"outPorts\":[\"  \"],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"in\",\"attrs\":{\".port-label\":{\"text\":\" \"}}},{\"id\":\"  \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\"  \"}}}]},\"position\":{\"x\":212,\"y\":5},\"angle\":0,\"id\":\"ca0b0207-f5a3-4789-a4b9-1797f2dbd5a1\",\"z\":2,\"attrs\":{\"rect\":{\"stroke-width\":1,\"fill\":\"#2d3236\"},\".label\":{\"text\":\"Get event details\"},\".p_id\":{\"text\":\"6023b2e264b1160034fd9b9f\"},\"image\":{\"xlink:href\":\"/plugins/lacework/lacework.png\",\"ref-y\":50},\"text\":{\"text\":\"Get event details\"}}},{\"type\":\"link\",\"source\":{\"id\":\"71a21434-9118-4080-92cb-908998ce8fd2\",\"port\":\" \"},\"target\":{\"id\":\"ca0b0207-f5a3-4789-a4b9-1797f2dbd5a1\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"324752dd-f24d-42a5-b0d5-7a863b9540e2\",\"z\":3,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"devs.MyImageModel\",\"size\":{\"width\":100,\"height\":73},\"inPorts\":[\" \"],\"outPorts\":[\"  \"],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"in\",\"attrs\":{\".port-label\":{\"text\":\" \"}}},{\"id\":\"  \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\"  \"}}}]},\"position\":{\"x\":400,\"y\":-219},\"angle\":0,\"id\":\"f1677723-1555-4587-9651-c6b80e21f8f6\",\"z\":4,\"attrs\":{\"rect\":{\"stroke-width\":1,\"fill\":\"#2d3236\"},\".label\":{\"text\":\"Print S3 Buckets to enable Encryption via CLI\"},\".p_id\":{\"text\":\"5f92a2f3da3961001ab1a0c4\"},\"image\":{\"xlink:href\":\"/plugins/CommandLine/CommandLine.png\",\"ref-y\":50},\"text\":{\"text\":\"Print S3 Buckets to enable Encryption via CLI\"}}},{\"type\":\"link\",\"source\":{\"id\":\"ca0b0207-f5a3-4789-a4b9-1797f2dbd5a1\",\"port\":\"  \"},\"target\":{\"id\":\"f1677723-1555-4587-9651-c6b80e21f8f6\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"b6837995-8a73-497d-b94a-8a1973b79d57\",\"z\":5,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"f1677723-1555-4587-9651-c6b80e21f8f6\",\"port\":\"  \"},\"target\":{\"id\":\"f1677723-1555-4587-9651-c6b80e21f8f6\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"acb0b35d-79f6-4d04-a410-fe137ab0c73e\",\"z\":6,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"devs.MyImageModel\",\"size\":{\"width\":100,\"height\":73},\"inPorts\":[\" \"],\"outPorts\":[\"  \"],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"in\",\"attrs\":{\".port-label\":{\"text\":\" \"}}},{\"id\":\"  \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\"  \"}}}]},\"position\":{\"x\":394,\"y\":231},\"angle\":0,\"id\":\"3b73f38c-22c6-42dc-ac4e-58a648aafe35\",\"z\":7,\"attrs\":{\"rect\":{\"stroke-width\":1,\"fill\":\"#2d3236\"},\".label\":{\"text\":\"Remediated\"},\".p_id\":{\"text\":\"5f92a31fda3961001ab1a1a6\"},\"image\":{\"xlink:href\":\"/plugins/Slack/Slack_Icon.png\",\"ref-y\":50},\"text\":{\"text\":\"Remediated\"}}},{\"type\":\"link\",\"source\":{\"id\":\"ca0b0207-f5a3-4789-a4b9-1797f2dbd5a1\",\"port\":\"  \"},\"target\":{\"id\":\"3b73f38c-22c6-42dc-ac4e-58a648aafe35\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"9e891628-e30d-48c6-92ad-c7f5dcd1deab\",\"z\":8,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"3b73f38c-22c6-42dc-ac4e-58a648aafe35\",\"port\":\"  \"},\"target\":{\"id\":\"3b73f38c-22c6-42dc-ac4e-58a648aafe35\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"e5da36a2-9dd5-4bfa-a886-b2c22065f0d6\",\"z\":9,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"devs.MyImageModel\",\"size\":{\"width\":100,\"height\":73},\"inPorts\":[\" \"],\"outPorts\":[\"  \"],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"in\",\"attrs\":{\".port-label\":{\"text\":\" \"}}},{\"id\":\"  \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\"  \"}}}]},\"position\":{\"x\":664,\"y\":-220},\"angle\":0,\"id\":\"e455a40b-df0b-4d7f-9f2d-dcaa56508467\",\"z\":10,\"attrs\":{\"rect\":{\"stroke-width\":1,\"fill\":\"#2d3236\"},\".label\":{\"text\":\"Create Encryption JSON\"},\".p_id\":{\"text\":\"5f92a324da3961001ab1a1bf\"},\"image\":{\"xlink:href\":\"/plugins/TextEditor/TextEditor.png\",\"ref-y\":50},\"text\":{\"text\":\"Create Encryption JSON\"}}},{\"type\":\"link\",\"source\":{\"id\":\"f1677723-1555-4587-9651-c6b80e21f8f6\",\"port\":\"  \"},\"target\":{\"id\":\"e455a40b-df0b-4d7f-9f2d-dcaa56508467\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"71486afb-b4c7-47e0-8bb6-bf2265f16ca7\",\"z\":11,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"e455a40b-df0b-4d7f-9f2d-dcaa56508467\",\"port\":\"  \"},\"target\":{\"id\":\"e455a40b-df0b-4d7f-9f2d-dcaa56508467\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"baf37cbb-237f-4994-a1ad-340eff7cfd74\",\"z\":12,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"devs.MyImageModel\",\"size\":{\"width\":100,\"height\":73},\"inPorts\":[\" \"],\"outPorts\":[\"  \"],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"in\",\"attrs\":{\".port-label\":{\"text\":\" \"}}},{\"id\":\"  \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\"  \"}}}]},\"position\":{\"x\":926,\"y\":-223},\"angle\":0,\"id\":\"b60de1ed-57c4-432f-ae16-ae5ec9a6e747\",\"z\":13,\"attrs\":{\"rect\":{\"stroke-width\":1,\"fill\":\"#2d3236\"},\".label\":{\"text\":\"Apply Encryption Configuration via CLI\"},\".p_id\":{\"text\":\"5f92a2f3da3961001ab1a0c4\"},\"image\":{\"xlink:href\":\"/plugins/CommandLine/CommandLine.png\",\"ref-y\":50},\"text\":{\"text\":\"Apply Encryption Configuration via CLI\"}}},{\"type\":\"link\",\"source\":{\"id\":\"b60de1ed-57c4-432f-ae16-ae5ec9a6e747\",\"port\":\"  \"},\"target\":{\"id\":\"b60de1ed-57c4-432f-ae16-ae5ec9a6e747\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"3970a880-f01f-4c36-a6a4-479546a079a5\",\"z\":14,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"e455a40b-df0b-4d7f-9f2d-dcaa56508467\",\"port\":\"  \"},\"target\":{\"id\":\"b60de1ed-57c4-432f-ae16-ae5ec9a6e747\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"c59bc1ee-88b9-4c59-9ed7-91fee9672f6d\",\"z\":15,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"devs.MyImageModel\",\"size\":{\"width\":100,\"height\":73},\"inPorts\":[\" \"],\"outPorts\":[\"  \"],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"in\",\"attrs\":{\".port-label\":{\"text\":\" \"}}},{\"id\":\"  \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\"  \"}}}]},\"position\":{\"x\":461,\"y\":5},\"angle\":0,\"id\":\"7e641774-dbe0-4bb2-93be-0a7495485fe8\",\"z\":16,\"attrs\":{\"rect\":{\"stroke-width\":1,\"fill\":\"#2d3236\"},\".label\":{\"text\":\"Apply Encryption Configuration via Object\"},\".p_id\":{\"text\":\"6047970a887b2000347ea8bd\"},\"image\":{\"xlink:href\":\"/plugins/Amazon-aws-s3/logo.png\",\"ref-y\":50},\"text\":{\"text\":\"Apply Encryption Configuration via Object\"}}},{\"type\":\"link\",\"source\":{\"id\":\"ca0b0207-f5a3-4789-a4b9-1797f2dbd5a1\",\"port\":\"  \"},\"target\":{\"id\":\"7e641774-dbe0-4bb2-93be-0a7495485fe8\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"efa1d1b2-781c-402b-be6e-091819c84e70\",\"z\":17,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"7e641774-dbe0-4bb2-93be-0a7495485fe8\",\"port\":\"  \"},\"target\":{\"id\":\"7e641774-dbe0-4bb2-93be-0a7495485fe8\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"e75732ea-b074-45c5-9cfd-71087220bffa\",\"z\":18,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"devs.MyImageModel\",\"size\":{\"width\":100,\"height\":73},\"inPorts\":[\" \"],\"outPorts\":[\"  \"],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"in\",\"attrs\":{\".port-label\":{\"text\":\" \"}}},{\"id\":\"  \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\"  \"}}}]},\"position\":{\"x\":670,\"y\":232},\"angle\":0,\"id\":\"a9f1f886-fed3-4d59-8705-080780fda824\",\"z\":19,\"attrs\":{\"rect\":{\"stroke-width\":1,\"fill\":\"#2d3236\"},\".label\":{\"text\":\"Ignored\"},\".p_id\":{\"text\":\"5f92a31fda3961001ab1a1a6\"},\"image\":{\"xlink:href\":\"/plugins/Slack/Slack_Icon.png\",\"ref-y\":50},\"text\":{\"text\":\"Ignored\"}}},{\"type\":\"link\",\"source\":{\"id\":\"3b73f38c-22c6-42dc-ac4e-58a648aafe35\",\"port\":\"  \"},\"target\":{\"id\":\"a9f1f886-fed3-4d59-8705-080780fda824\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"2baf11a2-e453-4d69-8cb0-bd2637b94a4b\",\"z\":20,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"a9f1f886-fed3-4d59-8705-080780fda824\",\"port\":\"  \"},\"target\":{\"id\":\"a9f1f886-fed3-4d59-8705-080780fda824\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"9fb6f7f2-15ab-4a59-bcda-256cc9b3ddd9\",\"z\":21,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}}]}",
    "used_plugins": [
        {
            "name": "lacework",
            "version": "1.0.0"
        },
        {
            "name": "CommandLine",
            "version": "1.2.0"
        },
        {
            "name": "Slack",
            "version": "1.1.0"
        },
        {
            "name": "TextEditor",
            "version": "1.0.0"
        },
        {
            "name": "CommandLine",
            "version": "1.2.0"
        },
        {
            "name": "Amazon-aws-s3",
            "version": "1.5.4"
        },
        {
            "name": "Slack",
            "version": "1.1.0"
        }
    ],
    "__v": 0,
    "code": "var bucketArr = []; // Array of S3 Buckets that will be filled with the resource information from the event.\nvar indexRemediate = 0; // Index for the S3 Bucket Remediate of the Map\nvar indexSlack = 0; // Index of the Slack Loop to send out information about the S3 Bucket remediation.\nvar bucketIgnoredArr = []; // Array of S3 Buckets that are violating but will be ignored.\nvar indexIgnored = 0; //Index of the S3 Buckets that are violating but will be ignored.\nvar indexFileCreation = 0; //Index for creation of the JSON files.\nvar indexRemediate2 = 0; //Index for a second CLI command used to replace the policy\n\nlet payload = trigger.payload; // The Payload that was send by the Webhook Trigger. Information about the Payload is available at https://support.lacework.com/hc/en-us/articles/360034367393-Webhook\n\nfunction checkconfiguration()  { // Function to check if both Auto Remediation steps are enabled.\n    if (configuration.enablebucketencryptionviacli == \"true\" && configuration.enablebucketencryptionviaobject == \"true\") {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n\nfunction geteventid() { // Function to get the Event ID from the Webhook Payload.\n    return `${payload.event_id}`;\n}\n\nfunction createBucketList() { // Function to build the S3 Bucket List that will be used to Remediate.\n    let p = configuration.eventuuid;\n    let laceworkAPIResult = getAction(p);\n    let resourcesArr = laceworkAPIResult.result.result.data[0].ENTITY_MAP.Resource;\n    for (let i = 0; i < resourcesArr.length; i++) {\n        if (!configuration.bucketIgnoreList.includes(resourcesArr[i].VALUE)) { // The S3 Bucket of the Event will be checked against the configuration list of to ignore S3 buckets.\n            bucketArr.push (resourcesArr[i].VALUE); // If the bucket is not on the list it will be pushed into the array.\n        }\n        else {\n            bucketIgnoredArr.push (resourcesArr[i].VALUE); // If the bucket is on the list and violating the policy it will be pushed into the second bucket list.\n        }\n    }\n}\n\nfunction printBucketName() { // Function to print the S3 buckets that will be remediated.\n    let bucket = bucketArr[indexRemediate]\n    let arr = bucket.split(\":::\")\n    return `echo Compliance Violation ${configuration.policyID} for the S3 bucket ${arr[arr.length-1]}`;\n}\n\nfunction checkconditionfilecreation() { //Check condition of the file creation texteditor object if it can execute.\n    if (indexRemediate == bucketArr.length && indexFileCreation < bucketArr.length) return true\n    return false\n}\n\nfunction getfilepath() { //Getting the filepath and name for the file that will be created.\n    let bucket = bucketArr[indexFileCreation];\n    let arr = bucket.split(\":::\");\n    return `${configuration.inputfolder}${arr[arr.length-1]}-${configuration.policyID}.json`;\n}\n\nfunction getfilecontent() { //Getting the file content of what will be written into the file itself.\n    let bucket = bucketArr[indexFileCreation];\n    let arr = bucket.split(\":::\");\n    const myjson = JSON.stringify(configuration.encryptionconfiguration);\n    return `${myjson}`;\n}\n\nfunction checkconditionforapplyingencryption() { //Check the condition for replace the current bucket policy via the CLI.\n    if (indexRemediate == bucketArr.length && indexFileCreation == bucketArr.length && indexRemediate2 < bucketArr.length) return true\n    return false\n}\n\nfunction enablebucketencryption() { // Enable Bucket Encryption via the CLI\n    let bucket = bucketArr[indexRemediate2];\n    let arr = bucket.split(\":::\");\n    let myoutput = JSON.stringify(configuration.bucketpolicy);\n    return `aws s3api put-bucket-encryption --bucket ${arr[arr.length-1]} --server-side-encryption-configuration file://${configuration.inputfolder}${arr[arr.length-1]}-${configuration.policyID}.json`; //Using the setting --acl private. Feel free to replace it with whatever you think is the right aws cli command to trigger.\n}\n\nfunction getbucketname() { // Function to print the S3 buckets that will be remediated.\n    let bucket = bucketArr[indexRemediate]\n    let arr = bucket.split(\":::\")\n    return `${arr[arr.length-1]}`;\n}\n\nfunction checkconditionfordeletionviaobject() {\n    if (indexRemediate == bucketArr.length && indexRemediate2 < bucketArr.length) return true\n    return false\n}\n\nfunction getbucketnameforremediation() {\n    let bucket = bucketArr[indexRemediate2]\n    let arr = bucket.split(\":::\")\n    return `${arr[arr.length-1]}`;\n}\n\nfunction remediateviaobject() { // Remediate the S3 buckets back to private acl.\n    let bucket = bucketArr[indexRemediate];\n    let arr = bucket.split(\":::\");\n    return `${arr[arr.length-1]}`; //Using the canned acl private.\n}\n\nfunction sendslackmessage() { // Function to send out a slack message for every S3 bucket that will be remediated.\n    let bucket = bucketArr[indexSlack];\n    let arr = bucket.split(\":::\");\n    let event_link = payload.event_link;\n    if (configuration.enablebucketencryptionviacli == \"true\") {\n        return `Compliance Violation ${configuration.policyID} The following S3 bucket is auto remediated back to ${configuration.violationdescription}: ${arr[arr.length-1]}. Executing CLI command aws s3api put-bucket-encryption --bucket ${arr[arr.length-1]}. More information about the event is available at ${event_link}`;\n    }\n    else if (configuration.enablebucketencryptionviaobject == \"true\") {\n        return `Compliance Violation ${configuration.policyID} The following S3 bucket is auto remediated back to ${configuration.violationdescription}: ${arr[arr.length-1]}. Using the Kaholo S3 object to do the enablement of the bucket encryption. More information about the event is available at ${event_link}`;\n    }\n    else {\n        return `Compliance Violation ${configuration.policyID}. Auto Remediation is diabled! The following S3 bucket would be auto remediated ${configuration.violationdescription}: ${arr[arr.length-1]}. More information about the event is available at ${event_link}`;   \n    }\n}\n\nfunction sendslackmessageforignored() { // Function to send out a slack message for every S3 bucket that will be ignored but is violating the policy.\n    let bucket = bucketIgnoredArr[indexIgnored];\n    let arr = bucket.split(\":::\");\n    let event_link = payload.event_link;\n    return `Compliance Violation ${configuration.policyID} The following S3 bucket is NOT remediated back to ${configuration.violationdescription}: ${arr[arr.length-1]}. It is ignored by the configuration of the Map. We recommend using tags in AWS to suppress this S3 bucket from triggering alerts in Lacework. More information about the event is available at ${event_link}`;    \n}\n\nfunction checkconditionforcli()\n{\n    if (configuration.enablebucketencryptionviacli == \"true\") {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction checkconditionforobject()\n{\n    if (configuration.enablebucketencryptionviaobject == \"true\") {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction checkremediationviacli() //Check if the enable logging should be done via the CLI?\n{\n    if (configuration.enablebucketencryptionviacli == \"true\") {\n        if (indexRemediate < bucketArr.length) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else {\n        return 0;\n    }\n}\n\n\nfunction checkremediationviaobject() //Check if the enable logging should be done via the Object?\n{\n    if (configuration.enablebucketencryptionviaobject == \"true\") {\n        if (indexRemediate < bucketArr.length) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction checkforignoredslack() { //Check if you want to also see the ignored buckets via the slack messages.\n    if (indexSlack == bucketArr.length && indexIgnored < bucketIgnoredArr.length && configuration.sendslackmessagesforignored == \"true\") {\n        return 1;\n    }\n    else {\n         return 0;\n    }\n}\n\nfunction getAction(pId) {  // Help function to get the return value of the event.\n   let p = getProcessById(pId)//Get the process. \n   if(!p ||!p.length)return; \n   p = p[p.length-1].actions; //Get all actions \n   let action = p[Object.keys(p)[0]];//get the needed action \n   return action \n}"
}