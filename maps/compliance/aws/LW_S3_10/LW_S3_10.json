{
    "configurations": [
        {
            "_id": "604b406c887b20003487a15e",
            "name": "LaceworkConfig",
            "value": "{\n    \"name\": \"LaceworkConfiguration\",\n    \"policyID\": \"LW_S3_10\",\n    \"violationdescription\": \"Ensure the S3 bucket ACL does not grant AWS users FULL_CONTROL [READ, WRITE, READ_ACP, WRITE_ACP]\",\n    \"eventuuid\": \"935996c0-b359-42ae-ae04-32cac50d8aad\",\n    \"reportuuid\": \"b3372af6-9b6a-41f4-89ff-d1667b7e0e51\",\n    \"dotheremediationviacli\": \"false\",\n    \"dotheremediationviaobject\": \"false\",\n    \"sendslackmessagesforignored\": \"true\",\n      \"bucketIgnoreList\":[\n        \"arn:aws:s3:::mybucket01\",\n        \"arn:aws:s3:::mybucket02\",\n        \"arn:aws:s3:::mybucket03\"\n    ],\n    \"awsaccountid\": \"123456789012\",\n    \"putbuckettagging\": \"true\",\n    \"tagname\": \"LW_S3_10\",\n    \"tagvalue\": \"suppressed\",\n    \"autoremediationonlyfornewviolations\": \"false\"\n}",
            "mapRevision": "604b406c887b20003487a13d",
            "__v": 0
        }
    ],
    "processes": [
        {
            "flowControl": "each",
            "actionsExecution": "series",
            "correlateAgents": null,
            "mandatory": null,
            "actions": [
                {
                    "name": "geteventid",
                    "timeout": null,
                    "retries": 0,
                    "method": "GetEventDetails",
                    "mandatory": null,
                    "params": [
                        {
                            "code": true,
                            "value": "geteventid()",
                            "param": "6048f9cf887b200034822552",
                            "viewName": "Event ID",
                            "name": "EVENT_ID",
                            "type": "string",
                            "description": null
                        }
                    ],
                    "isEnabled": true,
                    "numParallel": null
                }
            ],
            "used_plugin": {
                "name": "lacework",
                "version": "1.0.0"
            },
            "uuid": "935996c0-b359-42ae-ae04-32cac50d8aad",
            "numProcessParallel": null,
            "name": "Get event details",
            "description": null,
            "condition": "checkconfigurationforevent()",
            "coordination": null,
            "filterAgents": null,
            "postRun": "createBucketList() ",
            "preRun": null
        },
        {
            "flowControl": "each",
            "actionsExecution": "series",
            "correlateAgents": null,
            "mandatory": null,
            "actions": [
                {
                    "name": "printBucketName",
                    "timeout": null,
                    "retries": 0,
                    "method": "execute",
                    "mandatory": null,
                    "params": [
                        {
                            "code": true,
                            "value": "printBucketName()",
                            "param": null,
                            "viewName": "command",
                            "name": "COMMANDS",
                            "type": "string",
                            "description": null
                        }
                    ],
                    "isEnabled": true,
                    "numParallel": null
                },
                {
                    "name": "remediateviacli",
                    "timeout": null,
                    "retries": 0,
                    "method": "execute",
                    "mandatory": null,
                    "params": [
                        {
                            "code": true,
                            "value": "remediateviaawscli()",
                            "param": null,
                            "viewName": "command",
                            "name": "COMMANDS",
                            "type": "string",
                            "description": null
                        }
                    ],
                    "isEnabled": true,
                    "numParallel": null
                }
            ],
            "used_plugin": {
                "name": "CommandLine",
                "version": "1.2.0"
            },
            "uuid": "d0ce5808-32e2-4346-b817-0c3438424a36",
            "coordination": "each",
            "numProcessParallel": null,
            "name": "Remedite via CLI",
            "description": "S3 buckets to remediate\n",
            "condition": "checkremediationviacli()",
            "filterAgents": null,
            "postRun": "indexRemediate++;",
            "preRun": null
        },
        {
            "flowControl": "each",
            "actionsExecution": "series",
            "correlateAgents": null,
            "mandatory": null,
            "actions": [
                {
                    "name": "informsecurity",
                    "timeout": null,
                    "retries": 0,
                    "method": "sendIncomingWebhook",
                    "mandatory": null,
                    "params": [
                        {
                            "code": null,
                            "value": "Slack Webhook",
                            "param": "6048f9cf887b20003482255a",
                            "viewName": "Webhook URL",
                            "name": "webhookUrl",
                            "type": "vault",
                            "description": null
                        },
                        {
                            "code": true,
                            "value": "sendslackmessage()",
                            "param": "6048f9cf887b20003482255b",
                            "viewName": "Message (string, object)",
                            "name": "message",
                            "type": "string",
                            "description": null
                        }
                    ],
                    "isEnabled": true,
                    "numParallel": null
                }
            ],
            "used_plugin": {
                "name": "Slack",
                "version": "1.1.0"
            },
            "uuid": "a3992718-3f0b-42a8-bd94-b7986371d3dd",
            "coordination": "each",
            "numProcessParallel": null,
            "name": "Remediated",
            "description": null,
            "condition": "indexSlack < bucketArr.length",
            "filterAgents": null,
            "postRun": "indexSlack++;",
            "preRun": null
        },
        {
            "flowControl": "each",
            "actionsExecution": "series",
            "correlateAgents": null,
            "mandatory": null,
            "actions": [
                {
                    "name": "remediateviaobject",
                    "timeout": null,
                    "retries": 0,
                    "method": "putCannedACL",
                    "mandatory": null,
                    "params": [
                        {
                            "code": null,
                            "value": "AWS Access Key",
                            "param": "6048f9cf887b20003482255e",
                            "viewName": "Access key",
                            "name": "AWS_ACCESS_KEY_ID",
                            "type": "vault",
                            "description": null
                        },
                        {
                            "code": null,
                            "value": "AWS Secret Key",
                            "param": "6048f9cf887b20003482255f",
                            "viewName": "Secret key",
                            "name": "AWS_SECRET_ACCESS_KEY",
                            "type": "vault",
                            "description": null
                        },
                        {
                            "code": true,
                            "value": "remediateviaobject()",
                            "param": "6048f9cf887b200034822561",
                            "viewName": "Bucket name*",
                            "name": "BUCKET_NAME",
                            "type": "string",
                            "description": null
                        },
                        {
                            "code": null,
                            "value": "private",
                            "param": "6048f9cf887b200034822562",
                            "viewName": "Canned ACL Type",
                            "name": "ACL",
                            "type": "options",
                            "description": null
                        }
                    ],
                    "isEnabled": true,
                    "numParallel": null
                }
            ],
            "used_plugin": {
                "name": "Amazon-aws-s3",
                "version": "1.4.0"
            },
            "uuid": "046cbabf-e0c3-4e2b-a52a-ed675eb70b6d",
            "coordination": "each",
            "numProcessParallel": null,
            "name": "Remediate via Object",
            "description": "S3 buckets to remediate",
            "condition": "checkremediationviaobject()",
            "filterAgents": null,
            "postRun": "indexRemediate++;",
            "preRun": null
        },
        {
            "flowControl": "each",
            "actionsExecution": "series",
            "correlateAgents": null,
            "mandatory": null,
            "actions": [
                {
                    "retries": 0,
                    "mandatory": null,
                    "isEnabled": true,
                    "params": [
                        {
                            "_id": "604a3b5b887b200034852df1",
                            "code": null,
                            "value": "Slack Webhook",
                            "param": "6048f9cf887b200034822565",
                            "name": "webhookUrl"
                        },
                        {
                            "_id": "604a3b5b887b200034852df2",
                            "code": true,
                            "value": "sendslackmessageforignored()",
                            "param": "6048f9cf887b200034822566",
                            "name": "message"
                        }
                    ],
                    "name": "sendmessageforignored",
                    "timeout": null,
                    "method": "sendIncomingWebhook",
                    "numParallel": null
                }
            ],
            "used_plugin": {
                "name": "Slack",
                "version": "1.1.0"
            },
            "uuid": "16c80115-651a-4020-9340-6abfeadf95b0",
            "coordination": "each",
            "numProcessParallel": null,
            "name": "Ignored",
            "description": "Inform about Ignored buckets.",
            "condition": "checkforignoredslack()",
            "filterAgents": null,
            "postRun": "indexIgnored++;",
            "preRun": null
        },
        {
            "used_plugin": {
                "name": "lacework",
                "version": "1.2.0"
            },
            "uuid": "b3372af6-9b6a-41f4-89ff-d1667b7e0e51",
            "numProcessParallel": null,
            "name": "Get report details",
            "description": null,
            "mandatory": null,
            "condition": "checkconfigurationforreport()",
            "coordination": null,
            "actions": [
                {
                    "name": "getreportdetails",
                    "timeout": null,
                    "retries": 0,
                    "method": "GetLatestAWSComplianceReportDetails",
                    "mandatory": null,
                    "params": [
                        {
                            "code": true,
                            "value": "getawsaccountid()",
                            "param": null,
                            "viewName": "AWS ACCOUNT ID",
                            "name": "AWS_ACCOUNT_ID",
                            "type": "string",
                            "description": null
                        },
                        {
                            "code": null,
                            "value": "AWS_CIS_S3",
                            "param": null,
                            "viewName": "Report Type",
                            "name": "REPORT_TYPE",
                            "type": "options",
                            "description": null
                        }
                    ],
                    "isEnabled": true,
                    "numParallel": null
                }
            ],
            "correlateAgents": null,
            "filterAgents": null,
            "postRun": "createBucketListfromReport()",
            "preRun": null,
            "actionsExecution": "series"
        },
        {
            "used_plugin": {
                "name": "CommandLine",
                "version": "1.2.0"
            },
            "uuid": "05af267c-c63e-4ce3-a6fd-4078ea692696",
            "numProcessParallel": null,
            "name": "Put Bucket Tags via CLI",
            "description": null,
            "mandatory": null,
            "condition": "checkputbuckettagsviacli()",
            "coordination": "each",
            "actions": [
                {
                    "name": "putbuckettagging",
                    "timeout": null,
                    "retries": 0,
                    "method": "execute",
                    "mandatory": null,
                    "params": [
                        {
                            "code": true,
                            "value": "putbuckettagging()",
                            "param": null,
                            "viewName": "command",
                            "name": "COMMANDS",
                            "type": "string",
                            "description": null
                        }
                    ],
                    "isEnabled": true,
                    "numParallel": null
                }
            ],
            "correlateAgents": null,
            "filterAgents": null,
            "postRun": "indexTag++;",
            "preRun": null,
            "actionsExecution": "series"
        }
    ],
    "links": [
        {
            "uuid": "f456477e-68f1-445b-876e-2dbeb72eb29d",
            "sourceId": "02a4586b-70b9-4a02-bfd8-2e03b378d8fb",
            "targetId": "935996c0-b359-42ae-ae04-32cac50d8aad"
        },
        {
            "uuid": "35e6004f-6d6c-4b4e-8a73-927094accbd9",
            "sourceId": "935996c0-b359-42ae-ae04-32cac50d8aad",
            "targetId": "d0ce5808-32e2-4346-b817-0c3438424a36"
        },
        {
            "uuid": "2f6ad7db-99ab-414a-aad5-d933681adae7",
            "sourceId": "d0ce5808-32e2-4346-b817-0c3438424a36",
            "targetId": "d0ce5808-32e2-4346-b817-0c3438424a36"
        },
        {
            "uuid": "6db68dd5-1e45-4bd4-95bd-80650adc43c3",
            "sourceId": "935996c0-b359-42ae-ae04-32cac50d8aad",
            "targetId": "a3992718-3f0b-42a8-bd94-b7986371d3dd"
        },
        {
            "uuid": "c153dd74-b35a-4a3d-9b6b-fbafd9d293f3",
            "sourceId": "a3992718-3f0b-42a8-bd94-b7986371d3dd",
            "targetId": "a3992718-3f0b-42a8-bd94-b7986371d3dd"
        },
        {
            "uuid": "9da6c70a-2b10-49a0-9e52-4641b299d859",
            "sourceId": "935996c0-b359-42ae-ae04-32cac50d8aad",
            "targetId": "046cbabf-e0c3-4e2b-a52a-ed675eb70b6d"
        },
        {
            "uuid": "562a6ecc-dcd6-4785-8f02-cca4ff91ad9d",
            "sourceId": "046cbabf-e0c3-4e2b-a52a-ed675eb70b6d",
            "targetId": "046cbabf-e0c3-4e2b-a52a-ed675eb70b6d"
        },
        {
            "uuid": "e1131d59-de05-4af8-b2ca-9f9ec0ffb5ee",
            "sourceId": "a3992718-3f0b-42a8-bd94-b7986371d3dd",
            "targetId": "16c80115-651a-4020-9340-6abfeadf95b0"
        },
        {
            "uuid": "9e808e4f-06d4-460c-a8b9-2bb92d2cf2cc",
            "sourceId": "16c80115-651a-4020-9340-6abfeadf95b0",
            "targetId": "16c80115-651a-4020-9340-6abfeadf95b0"
        },
        {
            "uuid": "2f338517-7f6c-4509-97b0-be458e7036c5",
            "sourceId": "05af267c-c63e-4ce3-a6fd-4078ea692696",
            "targetId": "05af267c-c63e-4ce3-a6fd-4078ea692696"
        },
        {
            "uuid": "8f6c143a-146f-4f8f-8a91-53accb4e6e8d",
            "sourceId": "02a4586b-70b9-4a02-bfd8-2e03b378d8fb",
            "targetId": "b3372af6-9b6a-41f4-89ff-d1667b7e0e51"
        },
        {
            "uuid": "6301abc0-6065-45f6-9f5b-0fe6a530526d",
            "sourceId": "b3372af6-9b6a-41f4-89ff-d1667b7e0e51",
            "targetId": "a3992718-3f0b-42a8-bd94-b7986371d3dd"
        },
        {
            "uuid": "8a7e6f9b-1dc3-4c0d-aea1-960552919d88",
            "sourceId": "b3372af6-9b6a-41f4-89ff-d1667b7e0e51",
            "targetId": "046cbabf-e0c3-4e2b-a52a-ed675eb70b6d"
        },
        {
            "uuid": "49f0d7e9-6557-4ead-98b5-716eab48d0e5",
            "sourceId": "b3372af6-9b6a-41f4-89ff-d1667b7e0e51",
            "targetId": "d0ce5808-32e2-4346-b817-0c3438424a36"
        },
        {
            "uuid": "dcac51f5-71fe-45c5-abc2-bd8b8a32ec64",
            "sourceId": "b3372af6-9b6a-41f4-89ff-d1667b7e0e51",
            "targetId": "05af267c-c63e-4ce3-a6fd-4078ea692696"
        }
    ],
    "content": "{\"cells\":[{\"type\":\"devs.PMStartPoint\",\"size\":{\"width\":40,\"height\":39},\"outPorts\":[\" \"],\"inPorts\":[],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\" \"}}}]},\"position\":{\"x\":50,\"y\":20},\"angle\":0,\"id\":\"02a4586b-70b9-4a02-bfd8-2e03b378d8fb\",\"z\":1,\"attrs\":{\"rect\":{\"fill\":\"#2d3236\"}}},{\"type\":\"devs.MyImageModel\",\"size\":{\"width\":100,\"height\":73},\"inPorts\":[\" \"],\"outPorts\":[\"  \"],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"in\",\"attrs\":{\".port-label\":{\"text\":\" \"}}},{\"id\":\"  \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\"  \"}}}]},\"position\":{\"x\":254,\"y\":-140},\"angle\":0,\"id\":\"935996c0-b359-42ae-ae04-32cac50d8aad\",\"z\":2,\"attrs\":{\"rect\":{\"stroke-width\":1},\".label\":{\"text\":\"Get event details\"},\".p_id\":{\"text\":\"6023b2e264b1160034fd9b9f\"},\"image\":{\"xlink:href\":\"/plugins/lacework/lacework.png\",\"ref-y\":50},\"text\":{\"text\":\"Get event details\"}}},{\"type\":\"link\",\"source\":{\"id\":\"02a4586b-70b9-4a02-bfd8-2e03b378d8fb\",\"port\":\" \"},\"target\":{\"id\":\"935996c0-b359-42ae-ae04-32cac50d8aad\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"f456477e-68f1-445b-876e-2dbeb72eb29d\",\"z\":3,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"devs.MyImageModel\",\"size\":{\"width\":100,\"height\":73},\"inPorts\":[\" \"],\"outPorts\":[\"  \"],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"in\",\"attrs\":{\".port-label\":{\"text\":\" \"}}},{\"id\":\"  \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\"  \"}}}]},\"position\":{\"x\":684,\"y\":4},\"angle\":0,\"id\":\"d0ce5808-32e2-4346-b817-0c3438424a36\",\"z\":4,\"attrs\":{\"rect\":{\"stroke-width\":1},\".label\":{\"text\":\"Remedite via CLI\"},\".p_id\":{\"text\":\"5f92a2f3da3961001ab1a0c4\"},\"image\":{\"xlink:href\":\"/plugins/CommandLine/CommandLine.png\",\"ref-y\":50},\"text\":{\"text\":\"Remedite via CLI\"}}},{\"type\":\"link\",\"source\":{\"id\":\"935996c0-b359-42ae-ae04-32cac50d8aad\",\"port\":\"  \"},\"target\":{\"id\":\"d0ce5808-32e2-4346-b817-0c3438424a36\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"35e6004f-6d6c-4b4e-8a73-927094accbd9\",\"z\":5,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"d0ce5808-32e2-4346-b817-0c3438424a36\",\"port\":\"  \"},\"target\":{\"id\":\"d0ce5808-32e2-4346-b817-0c3438424a36\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"2f6ad7db-99ab-414a-aad5-d933681adae7\",\"z\":6,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"devs.MyImageModel\",\"size\":{\"width\":100,\"height\":73},\"inPorts\":[\" \"],\"outPorts\":[\"  \"],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"in\",\"attrs\":{\".port-label\":{\"text\":\" \"}}},{\"id\":\"  \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\"  \"}}}]},\"position\":{\"x\":420,\"y\":279},\"angle\":0,\"id\":\"a3992718-3f0b-42a8-bd94-b7986371d3dd\",\"z\":7,\"attrs\":{\"rect\":{\"stroke-width\":1},\".label\":{\"text\":\"Remediated\"},\".p_id\":{\"text\":\"5f92a31fda3961001ab1a1a6\"},\"image\":{\"xlink:href\":\"/plugins/Slack/Slack_Icon.png\",\"ref-y\":50},\"text\":{\"text\":\"Remediated\"}}},{\"type\":\"link\",\"source\":{\"id\":\"935996c0-b359-42ae-ae04-32cac50d8aad\",\"port\":\"  \"},\"target\":{\"id\":\"a3992718-3f0b-42a8-bd94-b7986371d3dd\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"6db68dd5-1e45-4bd4-95bd-80650adc43c3\",\"z\":8,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"a3992718-3f0b-42a8-bd94-b7986371d3dd\",\"port\":\"  \"},\"target\":{\"id\":\"a3992718-3f0b-42a8-bd94-b7986371d3dd\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"c153dd74-b35a-4a3d-9b6b-fbafd9d293f3\",\"z\":9,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"devs.MyImageModel\",\"size\":{\"width\":100,\"height\":73},\"inPorts\":[\" \"],\"outPorts\":[\"  \"],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"in\",\"attrs\":{\".port-label\":{\"text\":\" \"}}},{\"id\":\"  \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\"  \"}}}]},\"position\":{\"x\":496,\"y\":-3},\"angle\":0,\"id\":\"046cbabf-e0c3-4e2b-a52a-ed675eb70b6d\",\"z\":10,\"attrs\":{\"rect\":{\"stroke-width\":1},\".label\":{\"text\":\"Remediate via Object\"},\".p_id\":{\"text\":\"6047970a887b2000347ea8bd\"},\"image\":{\"xlink:href\":\"/plugins/Amazon-aws-s3/logo.png\",\"ref-y\":50},\"text\":{\"text\":\"Remediate via Object\"}}},{\"type\":\"link\",\"source\":{\"id\":\"935996c0-b359-42ae-ae04-32cac50d8aad\",\"port\":\"  \"},\"target\":{\"id\":\"046cbabf-e0c3-4e2b-a52a-ed675eb70b6d\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"9da6c70a-2b10-49a0-9e52-4641b299d859\",\"z\":11,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"046cbabf-e0c3-4e2b-a52a-ed675eb70b6d\",\"port\":\"  \"},\"target\":{\"id\":\"046cbabf-e0c3-4e2b-a52a-ed675eb70b6d\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"562a6ecc-dcd6-4785-8f02-cca4ff91ad9d\",\"z\":12,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"devs.MyImageModel\",\"size\":{\"width\":100,\"height\":73},\"inPorts\":[\" \"],\"outPorts\":[\"  \"],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"in\",\"attrs\":{\".port-label\":{\"text\":\" \"}}},{\"id\":\"  \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\"  \"}}}]},\"position\":{\"x\":681,\"y\":281},\"angle\":0,\"id\":\"16c80115-651a-4020-9340-6abfeadf95b0\",\"z\":13,\"attrs\":{\"rect\":{\"stroke-width\":1},\".label\":{\"text\":\"Ignored\"},\".p_id\":{\"text\":\"5f92a31fda3961001ab1a1a6\"},\"image\":{\"xlink:href\":\"/plugins/Slack/Slack_Icon.png\",\"ref-y\":50},\"text\":{\"text\":\"Ignored\"}}},{\"type\":\"link\",\"source\":{\"id\":\"a3992718-3f0b-42a8-bd94-b7986371d3dd\",\"port\":\"  \"},\"target\":{\"id\":\"16c80115-651a-4020-9340-6abfeadf95b0\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"e1131d59-de05-4af8-b2ca-9f9ec0ffb5ee\",\"z\":14,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"16c80115-651a-4020-9340-6abfeadf95b0\",\"port\":\"  \"},\"target\":{\"id\":\"16c80115-651a-4020-9340-6abfeadf95b0\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"9e808e4f-06d4-460c-a8b9-2bb92d2cf2cc\",\"z\":15,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"devs.MyImageModel\",\"size\":{\"width\":100,\"height\":73},\"inPorts\":[\" \"],\"outPorts\":[\"  \"],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"in\",\"attrs\":{\".port-label\":{\"text\":\" \"}}},{\"id\":\"  \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\"  \"}}}]},\"position\":{\"x\":260,\"y\":116},\"angle\":0,\"id\":\"b3372af6-9b6a-41f4-89ff-d1667b7e0e51\",\"z\":16,\"attrs\":{\"rect\":{\"stroke-width\":1},\".label\":{\"text\":\"Get report details\"},\".p_id\":{\"text\":\"605caee52447cb003445f7f7\"},\"image\":{\"xlink:href\":\"/plugins/lacework/lacework.png\",\"ref-y\":50},\"text\":{\"text\":\"Get report details\"}}},{\"type\":\"devs.MyImageModel\",\"size\":{\"width\":100,\"height\":73},\"inPorts\":[\" \"],\"outPorts\":[\"  \"],\"ports\":{\"groups\":{\"in\":{\"position\":{\"name\":\"left\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"left\",\"args\":{\"y\":10}}}},\"out\":{\"position\":{\"name\":\"right\"},\"attrs\":{\".port-label\":{\"fill\":\"#000\"},\".port-body\":{\"fill\":\"#fff\",\"stroke\":\"#000\",\"r\":10,\"magnet\":true}},\"label\":{\"position\":{\"name\":\"right\",\"args\":{\"y\":10}}}}},\"items\":[{\"id\":\" \",\"group\":\"in\",\"attrs\":{\".port-label\":{\"text\":\" \"}}},{\"id\":\"  \",\"group\":\"out\",\"attrs\":{\".port-label\":{\"text\":\"  \"}}}]},\"position\":{\"x\":445,\"y\":-291},\"angle\":0,\"id\":\"05af267c-c63e-4ce3-a6fd-4078ea692696\",\"z\":17,\"attrs\":{\"rect\":{\"stroke-width\":1},\".label\":{\"text\":\"Put Bucket Tags via CLI\"},\".p_id\":{\"text\":\"5f92a2f3da3961001ab1a0c4\"},\"image\":{\"xlink:href\":\"/plugins/CommandLine/CommandLine.png\",\"ref-y\":50},\"text\":{\"text\":\"Put Bucket Tags via CLI\"}}},{\"type\":\"link\",\"source\":{\"id\":\"05af267c-c63e-4ce3-a6fd-4078ea692696\",\"port\":\"  \"},\"target\":{\"id\":\"05af267c-c63e-4ce3-a6fd-4078ea692696\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"2f338517-7f6c-4509-97b0-be458e7036c5\",\"z\":18,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"02a4586b-70b9-4a02-bfd8-2e03b378d8fb\",\"port\":\" \"},\"target\":{\"id\":\"b3372af6-9b6a-41f4-89ff-d1667b7e0e51\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"8f6c143a-146f-4f8f-8a91-53accb4e6e8d\",\"z\":19,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"b3372af6-9b6a-41f4-89ff-d1667b7e0e51\",\"port\":\"  \"},\"target\":{\"id\":\"a3992718-3f0b-42a8-bd94-b7986371d3dd\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"6301abc0-6065-45f6-9f5b-0fe6a530526d\",\"z\":20,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"b3372af6-9b6a-41f4-89ff-d1667b7e0e51\",\"port\":\"  \"},\"target\":{\"id\":\"046cbabf-e0c3-4e2b-a52a-ed675eb70b6d\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"8a7e6f9b-1dc3-4c0d-aea1-960552919d88\",\"z\":21,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"b3372af6-9b6a-41f4-89ff-d1667b7e0e51\",\"port\":\"  \"},\"target\":{\"id\":\"d0ce5808-32e2-4346-b817-0c3438424a36\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"49f0d7e9-6557-4ead-98b5-716eab48d0e5\",\"z\":22,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}},{\"type\":\"link\",\"source\":{\"id\":\"b3372af6-9b6a-41f4-89ff-d1667b7e0e51\",\"port\":\"  \"},\"target\":{\"id\":\"05af267c-c63e-4ce3-a6fd-4078ea692696\",\"port\":\" \"},\"router\":{\"name\":\"manhattan\"},\"connector\":{\"name\":\"rounded\"},\"id\":\"dcac51f5-71fe-45c5-abc2-bd8b8a32ec64\",\"z\":23,\"attrs\":{\".connection\":{\"stroke\":\"#87939A\",\"stroke-width\":3},\".marker-target\":{\"fill\":\"#87939A\",\"d\":\"M 10 0 L 0 5 L 10 10 z\"}}}]}",
    "used_plugins": [
        {
            "name": "lacework",
            "version": "1.0.0"
        },
        {
            "name": "CommandLine",
            "version": "1.2.0"
        },
        {
            "name": "Slack",
            "version": "1.1.0"
        },
        {
            "name": "Amazon-aws-s3",
            "version": "1.4.0"
        },
        {
            "name": "Slack",
            "version": "1.1.0"
        }
    ],
    "__v": 0,
    "code": "// Default variables for this Map\nvar bucketArr = []; // Array of S3 Buckets that will be used for the Auto Remediation.\nvar indexRemediate = 0; // Index for the S3 Bucket Auto Remediation Lopps of the Map.\nvar indexSlack = 0; // Index of the Slack Loop of the map to send out information about the S3 Buckets that will be used for Auto Remediation.\nvar bucketIgnoredArr = []; // Array of S3 Buckets that are violating but will be ignored based in the bucketIgnoreList list in the configuration.\nvar indexIgnored = 0; //Index of the S3 Buckets for slack loop that are violating but will be ignored.\nvar indexTag = 0; // Index for setting tags for the ignored S3 buckets so they will be suppressed after the next compliance check.\nvar indexFileCreation = 0 // Index for the tag JSON file creation loop\nlet payload = trigger.payload; // The Payload that was send by the Webhook Trigger. Information about the Payload is available at https://support.lacework.com/hc/en-us/articles/360034367393-Webhook\nvar link; // Link used for Slack messages to send out about the event and report.\n\n\n// Object \"Get event details\" functions:\nfunction checkconfigurationforevent() { // Function to check if CLI and Object remediation is enabled and if a Payload is send via the Webhook.\n    if (configuration.dotheremediationviacli == \"true\" && configuration.dotheremediationviaobject == \"true\") {\n        return 0;\n    }\n    else if (payload !== null) // Don't try to get the Events if the payload is not defined.\n    {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction createBucketList() { // Function to build the S3 Bucket List that will be used for Auto Remediation.\n    let p = configuration.eventuuid;\n    let laceworkAPIResult = getAction(p);\n    link = payload.event_link;\n    if (laceworkAPIResult.result.result.data[0].ENTITY_MAP.ViolationReason[0].REC_ID == configuration.policyID) {\n        if (configuration.autoremediationonlyfornewviolations == \"true\")\n        {\n            let resourcesArr = laceworkAPIResult.result.result.data[0].ENTITY_MAP.NewViolation;\n            for (let i = 0; i < resourcesArr.length; i++) {\n            if (!configuration.bucketIgnoreList.includes(resourcesArr[i].RESOURCE)) { // The S3 Bucket of the Event will be checked against the configuration list of to ignore S3 buckets.\n                bucketArr.push(resourcesArr[i].RESOURCE); // If the bucket is not on the list it will be pushed into the array.\n            }\n            else {\n                bucketIgnoredArr.push(resourcesArr[i].RESOURCE); // If the bucket is on the list and violating the policy it will be pushed into the second bucket list.\n            }\n        }\n        }\n        else\n        {\n            let resourcesArr = laceworkAPIResult.result.result.data[0].ENTITY_MAP.Resource;\n            for (let i = 0; i < resourcesArr.length; i++) {\n            if (!configuration.bucketIgnoreList.includes(resourcesArr[i].VALUE)) { // The S3 Bucket of the Event will be checked against the configuration list of to ignore S3 buckets.\n                bucketArr.push(resourcesArr[i].VALUE); // If the bucket is not on the list it will be pushed into the array.\n            }\n            else {\n                bucketIgnoredArr.push(resourcesArr[i].VALUE); // If the bucket is on the list and violating the policy it will be pushed into the second bucket list.\n            }\n        }\n        }\n    }\n}\n\nfunction geteventid() { // Function to get the Event ID from the Webhook Payload.\n    return `${payload.event_id}`;\n}\n\n// Object \"Get report details\" functions:\nfunction checkconfigurationforreport() { // Function to check if CLI and Object Auto Remediation is enabled. Also check if it is not triggered via a Webhook with a payload send.\n    if (configuration.dotheremediationviacli == \"true\" && configuration.dotheremediationviaobject == \"true\") {\n        return 0;\n    }\n    else if (payload == null) // Only trigger the Report collection if there is no payload defined.\n    {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction createBucketListfromReport() { // Function to build the S3 Bucket List that will be used to Remediate.\n    let p = configuration.reportuuid;\n    let laceworkAPIResult = getAction(p);\n    let findreason = 0;\n    let recommendationsArr = laceworkAPIResult.result.result.data[0].recommendations;\n    for (let i = 0; i < recommendationsArr.length; i++) {\n        if (recommendationsArr[i].REC_ID == configuration.policyID) {\n            link = recommendationsArr[i].INFO_LINK;\n            findreason = i;\n        }\n        else {\n            // Didn't found the right reason\n        }\n    }\n    let resourcesArr = laceworkAPIResult.result.result.data[0].recommendations[findreason].VIOLATIONS;\n    for (let i = 0; i < resourcesArr.length; i++) {\n        if (!configuration.bucketIgnoreList.includes(resourcesArr[i].resource)) { // The S3 Bucket of the Event will be checked against the configuration list of to ignore S3 buckets.\n            bucketArr.push(resourcesArr[i].resource); // If the bucket is not on the list it will be pushed into the array.\n        }\n        else {\n            bucketIgnoredArr.push(resourcesArr[i].resource); // If the bucket is on the list and violating the policy it will be pushed into the second bucket list.\n        }\n    }\n}\n\nfunction getawsaccountid() {\n    return `${configuration.awsaccountid}`;\n}\n\n// Object \"Put Bucket Tags via CLI\" functions:\nfunction checkputbuckettagsviacli() { //Check if AWS Tags should be added to the S3 bucket.\n   if (configuration.putbuckettagging == \"true\") {\n        if (indexTag < bucketIgnoredArr.length) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction putbuckettagging(){ // Put the S3 Bucket tags for suppression.\n    let bucket = bucketIgnoredArr[indexTag];\n    let arr = bucket.split(\":::\");\n    return `aws resourcegroupstaggingapi tag-resources --resource-arn-list ${bucketIgnoredArr[indexTag]} --tags ${configuration.tagname}=${configuration.tagvalue}` ; //Using the put-bucket-tagging to create the tags of the S3 buckets\n}\n\n// Object \"AutoRemediate via Object\" functions:\nfunction checkremediationviaobject() //Check if the Remedation should be done via the Object?\n{\n    if (configuration.dotheremediationviaobject == \"true\") {\n        if (indexRemediate < bucketArr.length) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction remediateviaobject() { // Remediate the S3 buckets back to private acl.\n    let bucket = bucketArr[indexRemediate];\n    let arr = bucket.split(\":::\");\n    return `${arr[arr.length - 1]}`; //Using the canned acl private.\n}\n\n// Object \"AutoRemediate via CLI\" functions:\nfunction checkremediationviacli() //Check if the Remedation should be done via the CLI?\n{\n    if (configuration.dotheremediationviacli == \"true\") {\n        if (indexRemediate < bucketArr.length) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction printBucketName() { // Function to print the S3 buckets that will be remediated.\n    let bucket = bucketArr[indexRemediate]\n    let arr = bucket.split(\":::\")\n    return `echo Compliance Violation ${configuration.policyID} for the S3 bucket ${arr[arr.length - 1]}`;\n}\n\nfunction remediateviaawscli() { // Remediate the S3 buckets back to private acl.\n    let bucket = bucketArr[indexRemediate];\n    let arr = bucket.split(\":::\");\n    return `aws s3api put-bucket-acl --bucket ${arr[arr.length - 1]} --acl private`; //Using the setting --acl private. Feel free to replace it with whatever you think is the right aws cli command to trigger.\n}\n\n// Object \"Remediated\" functions:\nfunction sendslackmessage() { // Function to send out a slack message for every S3 bucket that will be remediated.\n    let bucket = bucketArr[indexSlack];\n    let arr = bucket.split(\":::\");\n    if (configuration.dotheremediationviacli == \"true\") {\n        return `Compliance Violation ${configuration.policyID} The following S3 bucket is auto remediated back to ${configuration.violationdescription}: ${arr[arr.length - 1]}. Using AWS CLI command to do the remediation of the bucket. More information about the event is available at ${link}`;\n    }\n    else if (configuration.dotheremediationviaobject == \"true\") {\n        return `Compliance Violation ${configuration.policyID} The following S3 bucket is auto remediated back to ${configuration.violationdescription}: ${arr[arr.length - 1]}. Using the Kaholo S3 object to do the remediation of the bucket. More information about the event is available at ${link}`;\n    }\n    else {\n        return `Compliance Violation ${configuration.policyID}. Auto Remediation is diabled! The following S3 bucket would be auto remediated back to ${configuration.violationdescription}: ${arr[arr.length - 1]}. Would execute CLI command aws s3api put-bucket-acl --bucket ${arr[arr.length - 1]} --acl private. More information about the event is available at ${link}`;\n    }\n}\n\n// Object \"Ignored\" functions:\nfunction checkforignoredslack() { //Check if you want to also see the ignored buckets via the slack messages.\n    if (indexSlack == bucketArr.length && indexIgnored < bucketIgnoredArr.length && configuration.sendslackmessagesforignored == \"true\") {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction sendslackmessageforignored() { // Function to send out a slack message for every S3 bucket that will be ignored but is violating the policy.\n    let bucket = bucketIgnoredArr[indexIgnored];\n    let arr = bucket.split(\":::\");\n    return `Compliance Violation ${configuration.policyID} The following S3 bucket is NOT remediated back to ${configuration.violationdescription}: ${arr[arr.length - 1]}. It is ignored by the configuration of the Map. We recommend using tags in AWS to suppress this S3 bucket from triggering alerts in Lacework. More information about the event is available at ${link}`;\n}\n\n// Help Functions for all Objects.\nfunction getAction(pId) {  // Help function to get the return value of the event.\n    let p = getProcessById(pId)//Get the process. \n    if (!p || !p.length) return;\n    p = p[p.length - 1].actions; //Get all actions \n    let action = p[Object.keys(p)[0]];//get the needed action \n    return action\n}"
}